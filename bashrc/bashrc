#
# ~/.bashrc
# sk1mm1lk

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# EndeavourOS generated, idk what this does tbh
_set_liveuser_PS1() {
    PS1='[\u@\h \W]\$ '
    if [ "$(whoami)" = "liveuser" ] ; then
        local iso_version="$(grep ^VERSION= /usr/lib/endeavouros-release 2>/dev/null | cut -d '=' -f 2)"
        if [ -n "$iso_version" ] ; then
            local prefix="eos-"
            local iso_info="$prefix$iso_version"
            PS1="[\u@$iso_info \W]\$ "
        fi
    fi
}
_set_liveuser_PS1
unset -f _set_liveuser_PS1

alias ls='ls --color=auto'
alias ll='ls -lavt --ignore=..'   # show long listing of all except ".."
alias l='ls -lav --ignore=.?*'    # show long listing but no hidden dotfiles except "."

# Custom aliases
alias v='nvim'                                       # neovim shortcut
alias cdterm='terminator --working-dir $(pwd)'       # creates another instance of the terminal at this location
alias cdf='cd $(dirname `fzf`)'                      # changes directory to a fuzzy found file's directory
alias graph='git log --decorate --oneline --graph'   # prints out a git log in graph form

# Sourcing jumper script
#source ~/.cdp/jumper.sh

# Custom functions

# Simpler screen recording without audio
recordScreen() {
    ffmpeg -f x11grab -s 1920x1080 -i :0.0 out.mkv
}

[[ "$(whoami)" == "root" ]] && return

[[ -z "$FUNCNEST" ]] && export FUNCNEST=100          # limits recursive functions, see 'man bash'

## Use the up and down arrow keys for finding a command in history
## (you can write some initial letters of the command first).
bind '"\e[A":history-search-backward'
bind '"\e[B":history-search-forward'

# Starship terminal
eval "$(starship init bash)"
